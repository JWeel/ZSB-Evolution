package objects.behaviour;

import java.util.ArrayList;

import framework.Tile;
import objects.Cell;

public class MoveBehaviour extends Behaviour {

	@Override
	public void execute(Cell c) {

		ArrayList<Tile> moves = c.getMoveSet();
		
		// always move right (DEBUG)
		Tile destination = moves.get(2); // 2 is right of current pos
		moveTo(destination,c);

		//real way to do this:
		// while (destination already has a cell) then try other cell
		// once it does not have a cell use moveTo and return
		// if you can't find one then it is not possible.
		// so then after the while loop isPossible must be triggered or somethign
	}
	
	// returns true if the move generated by this behaviour is possible
	@Override
	public boolean isPossible(Cell c) {

		return c.properties.currentEnergy > 1;
	}
	
	public void moveTo(Tile destination, Cell c) {
		c.x = destination.x;
		c.y = destination.y;
		c.worldRef.get().nextCells.add(c);

	}
}